apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pgbouncer.fullname" . }}
  labels:
    {{- include "pgbouncer.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "pgbouncer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "pgbouncer.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 120
      affinity:
        {{- if .Values.additionalAffinities }}
        {{- toYaml .Values.additionalAffinities | nindent 8 }}
        {{- end }}
        {{- if eq .Values.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  {{- include "pgbouncer.selectorLabels" . | nindent 20 }}
        {{- else if eq .Values.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    {{- include "pgbouncer.selectorLabels" . | nindent 20 }}
        {{- end }}
      serviceAccountName: {{ include "pgbouncer.serviceAccountName" . }}
      containers:
        - name: pgbouncer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          {{- range .Values.image.args }}
            - {{ . }}
          {{- end }}
          env:
            {{- include "pgbouncer.environment" . | nindent 12 }}
            {{- if .Values.env }}
            {{- range $key, $value :=  .Values.env }}
              - name: {{ $key }}
                value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          ports:
            - name: {{ .Values.service.name }}
              containerPort: {{ .Values.service.port }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |-
                    kill -s INT $(pidof pgbouncer)
                    while $(pidof pgbouncer > /dev/null 2>&1); do
                      sleep 5
                    done
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{ if and .Values.databases .Values.users }}
            - name: secret
              subPath: userlist.txt
              mountPath: /etc/pgbouncer/userlist.txt
              readOnly: true
          {{ end }}
            - name: secret
              subPath: pgbouncer.ini
              mountPath: /etc/pgbouncer/pgbouncer.ini
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: secret
          secret:
            secretName: {{ include "pgbouncer.fullname" . }}
